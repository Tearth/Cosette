// <auto-generated />
using System;
using Cosette.Tuner.Web.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cosette.Tuner.Web.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20201103194946_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("Cosette.Tuner.Web.Database.Models.ChromosomeGeneModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChromosomeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChromosomeId");

                    b.ToTable("ChromosomeGenes");
                });

            modelBuilder.Entity("Cosette.Tuner.Web.Database.Models.ChromosomeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChromosomeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("Draws")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ElapsedTime")
                        .HasColumnType("REAL");

                    b.Property<int>("Errors")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExperimentalEngineWins")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fitness")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReferenceEngineWins")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChromosomeId");

                    b.ToTable("Chromosomes");
                });

            modelBuilder.Entity("Cosette.Tuner.Web.Database.Models.EngineStatisticsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AverageDepth")
                        .HasColumnType("REAL");

                    b.Property<double>("AverageNodesCount")
                        .HasColumnType("REAL");

                    b.Property<double>("AverageNodesPerSecond")
                        .HasColumnType("REAL");

                    b.Property<double>("AverageTimePerGame")
                        .HasColumnType("REAL");

                    b.Property<int>("ChromosomeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsReferenceEngine")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChromosomeId");

                    b.ToTable("EngineStatistics");
                });

            modelBuilder.Entity("Cosette.Tuner.Web.Database.Models.GenerationGeneModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenerationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.ToTable("GenerationGenes");
                });

            modelBuilder.Entity("Cosette.Tuner.Web.Database.Models.GenerationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BestFitness")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<double>("ElapsedTime")
                        .HasColumnType("REAL");

                    b.Property<int>("TestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("Generations");
                });

            modelBuilder.Entity("Cosette.Tuner.Web.Database.Models.TestModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationTimeUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("Cosette.Tuner.Web.Database.Models.ChromosomeGeneModel", b =>
                {
                    b.HasOne("Cosette.Tuner.Web.Database.Models.GenerationModel", "Chromosome")
                        .WithMany()
                        .HasForeignKey("ChromosomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cosette.Tuner.Web.Database.Models.ChromosomeModel", b =>
                {
                    b.HasOne("Cosette.Tuner.Web.Database.Models.ChromosomeModel", "Chromosome")
                        .WithMany()
                        .HasForeignKey("ChromosomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cosette.Tuner.Web.Database.Models.EngineStatisticsModel", b =>
                {
                    b.HasOne("Cosette.Tuner.Web.Database.Models.ChromosomeModel", "Chromosome")
                        .WithMany("EnginesStatistics")
                        .HasForeignKey("ChromosomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cosette.Tuner.Web.Database.Models.GenerationGeneModel", b =>
                {
                    b.HasOne("Cosette.Tuner.Web.Database.Models.GenerationModel", "Generation")
                        .WithMany("BestGenes")
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cosette.Tuner.Web.Database.Models.GenerationModel", b =>
                {
                    b.HasOne("Cosette.Tuner.Web.Database.Models.TestModel", "Test")
                        .WithMany("Generation")
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
